name: Nightly

on:
  schedule:
    - cron: 0 6 * * 6

permissions:
  actions: write
  contents: write

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: nightly

      - name: Install Dependencies
        run: shards install --production

      - name: Compile Binaries
        run: |
          crystal build src/main.cr --debug -o docr
          tar -zcf docr-nightly-linux-x86_64.tar.gz docr

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docr
          path: |
            docr
            docr-nightly-linux-x86_64.tar.gz

  windows:
    needs: linux
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Crystal
        uses: crystal-lang/install-crystal@v1
        with:
          crystal: nightly

      - name: Install Dependencies
        run: shards install --production

      - name: Compile Binaries
        run: |
          crystal build src\main.cr --debug -o docr.exe
          $compress = @{
            Path = "docr.exe", "docr.pdb", "*.dll"
            DestinationPath = "docr-nightly-windows-x86_64-msvc.zip"
          }
          Compress-Archive @compress

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: docr
          path: |
            docr.exe
            docr.pdb
            docr-nightly-windows-x86_64-msvc.zip

  release:
    needs: windows
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts/

      - name: Prepare Artifacts
        run: |
          mv artifacts/docr/* .
          sha256sum docr docr.exe docr.pdb > checksums.txt

      - name: Create Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

        run: |
          gh release view nightly &>/dev/null && gh release delete nightly -y
          gh release create nightly -pt Nightly --notes "Nightly release for $(date +%F)."
          gh release upload nightly checksums.txt
          gh release upload nightly docr-nightly-linux-x86_64.tar.gz
          gh release upload nightly docr-nightly-windows-x86_64-msvc.zip
